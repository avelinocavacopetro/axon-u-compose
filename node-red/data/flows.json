[
    {
        "id": "aa93b0a911d0f92d",
        "type": "tab",
        "label": "U SIMULATION",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1ad42d366658274d",
        "type": "websocket-listener",
        "path": "/uProxy",
        "wholemsg": "false"
    },
    {
        "id": "be30df5fe716aec9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mosquitto",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6abbf450488e7897",
        "type": "websocket in",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "server": "1ad42d366658274d",
        "client": "",
        "x": 110,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "fb8472950beb15b0",
        "type": "websocket out",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "server": "1ad42d366658274d",
        "client": "",
        "x": 2190,
        "y": 1060,
        "wires": []
    },
    {
        "id": "cea2b7e7b1432949",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "Websocket Treatment",
        "info": "",
        "x": 140,
        "y": 400,
        "wires": []
    },
    {
        "id": "6144bf94b93fc070",
        "type": "json",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 460,
        "wires": [
            [
                "8efaad43bcbf4967"
            ]
        ]
    },
    {
        "id": "8efaad43bcbf4967",
        "type": "switch",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "property": "payload.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "startOperation",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "selectGrade",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "selectPayment",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "confirmPayment",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "declinePayment",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "cancelPayment",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "startFueling",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "completeFueling",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "printReceipt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "endOperation",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "cancelOperation",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 11,
        "x": 790,
        "y": 460,
        "wires": [
            [
                "78728061c40675cb"
            ],
            [
                "47207b1dbdb28c60"
            ],
            [
                "256791cc0a1a430a"
            ],
            [
                "05b142e1d32d92ce"
            ],
            [
                "9563d1563d675cff"
            ],
            [
                "04e5d5df13829588"
            ],
            [
                "2520cbf76ad6d7ca"
            ],
            [
                "1cd91c83f56be44e"
            ],
            [
                "6de173de773681dd"
            ],
            [
                "ca0240a111626199"
            ],
            [
                "f16d65b521ce8d6d"
            ]
        ]
    },
    {
        "id": "78728061c40675cb",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "startOperation",
        "func": "msg.payload = {\"screen\": \"paymentScreen\", \"status\": \"selectOption\"}\nflow.set(\"currentScreen\", \"paymentScreen\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 180,
        "wires": [
            [
                "002c049840cf7676"
            ]
        ]
    },
    {
        "id": "47207b1dbdb28c60",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "selectGrade",
        "func": "if (msg.payload.payload.grade) {\n    flow.set(\"selectedGrade\", msg.payload.payload.grade);\n}\n\nif (flow.get(\"executedPayment\") === true) {\n    // msg.payload = {\"command\": \"startFueling\"}\n    msg.payload = { \"screen\": \"gradeScreen\", \"status\": \"liftNozzle\", \"payload\": { \"message\": \"lift_nozzle\" } }\n    flow.set(\"currentScreen\", \"gradeScreen\");\n} else {\n    msg.payload = {\"screen\": \"paymentScreen\", \"status\": \"selectOption\"}\n    flow.set(\"currentScreen\", \"paymentScreen\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 300,
        "wires": [
            [
                "8efaad43bcbf4967",
                "71ad6206439c65dd"
            ]
        ]
    },
    {
        "id": "256791cc0a1a430a",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "selectPayment",
        "func": "flow.set(\"canceledPayment\", false);\n\nconst paymentMethod = msg.payload.payload.paymentMethod;\nflow.set(\"paymentMethod\", msg.payload.payload.paymentMethod);\n\nif (paymentMethod === 'at_pump') {\n    msg.payload = {\"screen\": \"cardScreen\", \"status\": \"insertCard\"} \n    flow.set(\"currentScreen\", \"cardScreen\");\n} else if (paymentMethod === 'at_kiosk') {\n    msg.payload = { \"screen\": \"paymentScreen\", \"status\": \"authorizePayment\", \"payload\": {\"message\": \"wait_authorization\" }}\n    flow.set(\"currentScreen\", \"paymentScreen\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 480,
        "wires": [
            [
                "e54908dccb0cbabc",
                "43f9e6823e541abb"
            ]
        ]
    },
    {
        "id": "43f9e6823e541abb",
        "type": "delay",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1200,
        "y": 540,
        "wires": [
            [
                "4dd76bee2c6a5d6b"
            ]
        ]
    },
    {
        "id": "4dd76bee2c6a5d6b",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "confirmPayment",
        "func": "// flow.set(\"executedPayment\", true);\n\nif (flow.get(\"canceledPayment\") === true) {\n    flow.set(\"executedPayment\", false);\n    msg = null;\n} else {\n    const paymentMethod = flow.get(\"paymentMethod\");\n\n    switch (paymentMethod) {\n        case 'at_pump':\n        //     if (flow.get(\"selectedGrade\")){\n        //         // msg.payload = {\"command\": \"startFueling\", \"payload\": {\"message\": \"payment_approved\"}}\n        //         msg.payload = { \"command\": \"gradeScreen\", \"payload\": {\"message\": \"lift_nozzle\"}}\n        //     } else {\n        //         msg.payload = {\"screen\": \"gradeScreen\", \"payload\": {\"message\": \"payment_approved\"}}\n        //     }\n        //     break;\n            msg = null;\n            break;\n        case 'at_kiosk':\n            flow.set(\"executedPayment\", true);\n            if (flow.get(\"selectedGrade\")) {\n                // msg.payload = {\"command\": \"startFueling\", \"payload\": {\"message\": \"start_refueling\"}}\n                // msg.payload = { \"screen\": \"gradeScreen\", \"payload\": { \"message\": \"lift_nozzle\" } }\n                msg.payload = { \"screen\": \"fuelingScreen\", \"status\": \"liftNozzle\", \"payload\": { \"message\": \"start_refueling\" } }\n                flow.set(\"currentScreen\", \"fuelingScreen\");\n            } else {\n                msg.payload = {\"screen\": \"gradeScreen\", \"status\": \"selectOption\"}\n                flow.set(\"currentScreen\", \"gradeScreen\");\n            }\n            break;\n        default:\n            break;\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 540,
        "wires": [
            [
                "8efaad43bcbf4967",
                "e6ba57db7c701194"
            ]
        ]
    },
    {
        "id": "2520cbf76ad6d7ca",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "startFueling",
        "func": "let msgToUserflow = {\n    \"payload\": {\n        \"screen\": \"fuelingScreen\",\n        \"status\": \"fuelingInProgress\",\n        \"payload\": {\n            \"grade\": flow.get(\"selectedGrade\")\n        }\n    }\n};\n\nmsg.payload = {\n    \"payload\": {\n        \"grade\": flow.get(\"selectedGrade\"),\n        \"amount\": \"0000000\",\n        \"volume\": \"0000000\",\n    }\n};\n\n// msg.payload = {\n//     \"screen\": \"fuelingScreen\", \n//     \"status\": \"fuelingInProgress\",\n//     \"payload\": {\n//         \"grade\": flow.get(\"selectedGrade\"),\n//         \"amount\": \"0000000\",\n//         \"volume\": \"0000000\",\n//     }\n// }\n\nflow.set(\"currentScreen\", \"fuelingScreen\");\n\nnode.send([msgToUserflow, msg]);\n// return msg;",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 980,
        "wires": [
            [
                "951926167d21c47c",
                "b87281a9c20773ad"
            ],
            [
                "1edc7bb364a35c37"
            ]
        ]
    },
    {
        "id": "3334303994139c8b",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "completeFueling",
        "func": "const paymentMethod = flow.get(\"paymentMethod\");\n\nif (paymentMethod === 'at_pump') {\n    msg.payload = {\n        \"screen\": \"fuelingScreen\", \n        \"status\": \"fuelingCompleted\",\n        \"payload\": {\n            \"grade\": flow.get(\"selectedGrade\"),\n            \"message\": \"fueling_completed\"\n        }\n    }\n    flow.set(\"currentScreen\", \"fuelingScreen\");\n} else if (paymentMethod === 'at_kiosk') {\n    msg.payload = {\n        \"screen\": \"fuelingScreen\",\n        \"status\": \"payAtKiosk\",\n        \"payload\": {\n            \"grade\": flow.get(\"selectedGrade\"),\n            \"message\": \"fueling_completed\"\n        }\n    }\n    flow.set(\"currentScreen\", \"fuelingScreen\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 1160,
        "wires": [
            [
                "d9b55c3d130b9e4b",
                "f642317d534ea9f3"
            ]
        ]
    },
    {
        "id": "d9b55c3d130b9e4b",
        "type": "delay",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1980,
        "y": 1200,
        "wires": [
            [
                "cac2d4eac40a81d5"
            ]
        ]
    },
    {
        "id": "cac2d4eac40a81d5",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "printReceipt",
        "func": "const paymentMethod = flow.get(\"paymentMethod\");\n\nif (paymentMethod === 'at_pump') {\n    msg.payload = {\"screen\": \"receiptScreen\", \"status\": \"selectOption\"}\n    flow.set(\"currentScreen\", \"receiptScreen\");\n} else if (paymentMethod === 'at_kiosk') {\n    flow.set(\"selectedGrade\", null);\n    flow.set(\"paymentMethod\", null);\n    flow.set(\"executedPayment\", false);\n    flow.set(\"canceledPayment\", false);\n    msg.payload = { \"screen\": \"idleScreen\", \"status\": \"insertCard\" }\n    flow.set(\"currentScreen\", \"idleScreen\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1990,
        "y": 1240,
        "wires": [
            [
                "f642317d534ea9f3"
            ]
        ]
    },
    {
        "id": "6de173de773681dd",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "printReceipt",
        "func": "msg.payload = {\"command\": \"printReceipt\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1200,
        "wires": [
            [
                "ca0240a111626199"
            ]
        ]
    },
    {
        "id": "94fee3b2b990c331",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "{\"command\": \"startOperation\"}",
        "info": "",
        "x": 1060,
        "y": 140,
        "wires": []
    },
    {
        "id": "0fb1de8e6c842c16",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "{\"command\": \"selectGrade\", \"payload\": {\"grade\": \"diesel\"}}",
        "info": "",
        "x": 1150,
        "y": 260,
        "wires": []
    },
    {
        "id": "e979f3e21f53efb7",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "{\"command\": \"selectPayment\", \"payload\": {\"paymentMethod\": \"at_pump\"}}",
        "info": "",
        "x": 1200,
        "y": 400,
        "wires": []
    },
    {
        "id": "fe1004786554bf0f",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "{\"command\": \"startFueling\"}",
        "info": "",
        "x": 1060,
        "y": 940,
        "wires": []
    },
    {
        "id": "c2e145a4ebc3353b",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "{\"command\": \"printReceipt\"}",
        "info": "",
        "x": 1060,
        "y": 1160,
        "wires": []
    },
    {
        "id": "1cd91c83f56be44e",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "completeFueling",
        "func": "msg.payload = { \"screen\": \"fuelingScreen\", \"payload\": { \"message\": \"fueling_completed\" }}\nflow.set(\"currentScreen\", \"fuelingScreen\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1080,
        "wires": [
            [
                "229a454a9ef1b83a"
            ]
        ]
    },
    {
        "id": "e903457577fd02df",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "{\"command\": \"completeFueling\"}",
        "info": "",
        "x": 1070,
        "y": 1040,
        "wires": []
    },
    {
        "id": "829076ba67945394",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "{\"command\": \"endOperation\"}",
        "info": "",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "ca0240a111626199",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "endOperation",
        "func": "flow.set(\"selectedGrade\", null);\nflow.set(\"executedPayment\", false);\nflow.set(\"canceledPayment\", false);\nflow.set(\"paymentMethod\", null);\n\nmsg.payload = { \"screen\": \"idleScreen\", \"status\": \"insertCard\", \"payload\": {\"message\": \"thank_you\"}}\nflow.set(\"currentScreen\", \"idleScreen\");\n    \nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1320,
        "wires": [
            [
                "f015d7628f34f310"
            ]
        ]
    },
    {
        "id": "ab44f1f438943ff9",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "{\"command\": \"cancelOperation\"}",
        "info": "",
        "x": 1070,
        "y": 1400,
        "wires": []
    },
    {
        "id": "f16d65b521ce8d6d",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "cancelOperation",
        "func": "flow.set(\"selectedGrade\", null);\nflow.set(\"executedPayment\", false);\nflow.set(\"canceledPayment\", false);\nflow.set(\"paymentMethod\", null);\n\nmsg.payload = {\"screen\": \"idleScreen\", \"status\": \"insertCard\"}\nflow.set(\"currentScreen\", \"idleScreen\");\n    \nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1440,
        "wires": [
            [
                "acfe891a44feaf85"
            ]
        ]
    },
    {
        "id": "4966d0698b96fe45",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "{\"command\": \"cancelPayment\"}",
        "info": "",
        "x": 1070,
        "y": 820,
        "wires": []
    },
    {
        "id": "04e5d5df13829588",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "cancelPayment",
        "func": "flow.set(\"executedPayment\", false);\nflow.set(\"canceledPayment\", true);\nflow.set(\"paymentMethod\", null);\n\nmsg.payload = {\"screen\": \"paymentScreen\", \"status\": \"selectOption\"}\nflow.set(\"currentScreen\", \"paymentScreen\");\n    \nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 860,
        "wires": [
            [
                "1a7a2cd328c27c34"
            ]
        ]
    },
    {
        "id": "951926167d21c47c",
        "type": "delay",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1440,
        "y": 980,
        "wires": [
            [
                "f441ebbfaba0de56"
            ]
        ]
    },
    {
        "id": "13a1166035c72b75",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "Fueling Simulation",
        "info": "",
        "x": 1470,
        "y": 940,
        "wires": []
    },
    {
        "id": "f441ebbfaba0de56",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "fueling \" \"",
        "func": "msg.payload = {\n    \"payload\": {\n        \"grade\": flow.get(\"selectedGrade\"),\n        \"amount\": \" \",\n        \"volume\": \" \",\n    }\n}\nflow.set(\"currentScreen\", \"fuelingScreen\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 980,
        "wires": [
            [
                "19bcc38a18e01678",
                "d796240084285f5b"
            ]
        ]
    },
    {
        "id": "19bcc38a18e01678",
        "type": "delay",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1440,
        "y": 1020,
        "wires": [
            [
                "e37b4bcd6016fb0c"
            ]
        ]
    },
    {
        "id": "e37b4bcd6016fb0c",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "fueling \"0000000\"",
        "func": "msg.payload = {\n    \"payload\": {\n        \"grade\": flow.get(\"selectedGrade\"),\n        \"amount\": \"0000000\",\n        \"volume\": \"0000000\",\n    }\n}\nflow.set(\"currentScreen\", \"fuelingScreen\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1020,
        "wires": [
            [
                "8e514849caebb87a",
                "d796240084285f5b"
            ]
        ]
    },
    {
        "id": "8e514849caebb87a",
        "type": "delay",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1440,
        "y": 1060,
        "wires": [
            [
                "78292979a4386d12"
            ]
        ]
    },
    {
        "id": "78292979a4386d12",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "fueling \" \"",
        "func": "msg.payload = {\n    \"payload\": {\n        \"grade\": flow.get(\"selectedGrade\"),\n        \"amount\": \" \",\n        \"volume\": \" \",\n    }\n}\nflow.set(\"currentScreen\", \"fuelingScreen\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 1060,
        "wires": [
            [
                "f711fd21c91b761d",
                "d796240084285f5b"
            ]
        ]
    },
    {
        "id": "27b2ca5ddc98fa2d",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "fueling \"0000000\"",
        "func": "msg.payload = {\n    \"payload\": {\n        \"grade\": flow.get(\"selectedGrade\"),\n        \"amount\": \"0000000\",\n        \"volume\": \"0000000\",\n    }\n}\nflow.set(\"currentScreen\", \"fuelingScreen\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1100,
        "wires": [
            [
                "99b4508d1590cd61",
                "d796240084285f5b"
            ]
        ]
    },
    {
        "id": "f711fd21c91b761d",
        "type": "delay",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1440,
        "y": 1100,
        "wires": [
            [
                "27b2ca5ddc98fa2d"
            ]
        ]
    },
    {
        "id": "bc901e79bf61e925",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "fueling \" \"",
        "func": "msg.payload = {\n    \"payload\": {\n        \"grade\": flow.get(\"selectedGrade\"),\n        \"amount\": \" \",\n        \"volume\": \" \",\n    }\n}\nflow.set(\"currentScreen\", \"fuelingScreen\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 1140,
        "wires": [
            [
                "23731e00b9126f23",
                "d796240084285f5b"
            ]
        ]
    },
    {
        "id": "99b4508d1590cd61",
        "type": "delay",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1440,
        "y": 1140,
        "wires": [
            [
                "bc901e79bf61e925"
            ]
        ]
    },
    {
        "id": "23731e00b9126f23",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "loop",
        "func": "let total = 100; // número de iterações\nlet delay = 100; // milissegundos (0.2 segundos)\nlet pricePerUnit = 1.80; // €/litro ou €/galão\nlet volumeStep = 0.4; // quanto aumenta em cada passo\n\nfor (let i = 1; i <= total; i++) {\n    (function (index) {\n        setTimeout(function () {\n            let volume = (index * volumeStep);\n            let amount = (volume * pricePerUnit);\n\n            let msgOut = {\n                payload: {\n                    // screen: \"fuelingScreen\",\n                    // status: \"fuelingInProgress\",\n                    payload: {\n                        grade: flow.get(\"selectedGrade\"),\n                        amount: amount.toFixed(2),\n                        volume: volume.toFixed(3)\n                    }\n                }\n            };\n\n            // Se for a última iteração, envia msgOut para saída 1 e outra mensagem especial para saída 2\n            if (index === total) {\n                let finalMsg = {\n                    payload: {\n                        command: \"completeFueling\"\n                    }\n                };\n                node.send([msgOut, finalMsg]);\n            } else {\n                // só envia para a saída 1\n                node.send([msgOut, null]);\n            }\n\n        }, index * delay);\n    })(i);\n}\n\nreturn null; \n// return msg;",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1790,
        "y": 1140,
        "wires": [
            [
                "d796240084285f5b"
            ],
            [
                "3334303994139c8b"
            ]
        ]
    },
    {
        "id": "05af3525b512ffee",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "{\"command\": \"selectPayment\", \"payload\": {\"paymentMethod\": \"at_kiosk\"}}",
        "info": "",
        "x": 1200,
        "y": 440,
        "wires": []
    },
    {
        "id": "ee4bfcd4b93c36ad",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "todo: print receipt",
        "info": "",
        "x": 1220,
        "y": 1200,
        "wires": []
    },
    {
        "id": "ed4e01fade9d7c7b",
        "type": "mqtt in",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "nozzle",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "be30df5fe716aec9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 980,
        "wires": [
            [
                "d8a02818540cbe02",
                "24876888d3d55db5"
            ]
        ]
    },
    {
        "id": "1331ef883d726a27",
        "type": "mqtt out",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "nozzle",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "be30df5fe716aec9",
        "x": 290,
        "y": 1280,
        "wires": []
    },
    {
        "id": "4b29cb1c14f39aad",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"diesel\"",
        "payloadType": "str",
        "x": 110,
        "y": 1280,
        "wires": [
            [
                "1331ef883d726a27"
            ]
        ]
    },
    {
        "id": "4602a984084d5d49",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"regular\"",
        "payloadType": "str",
        "x": 120,
        "y": 1320,
        "wires": [
            [
                "1331ef883d726a27"
            ]
        ]
    },
    {
        "id": "44679476d35f37f6",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"premium\"",
        "payloadType": "str",
        "x": 120,
        "y": 1360,
        "wires": [
            [
                "1331ef883d726a27"
            ]
        ]
    },
    {
        "id": "06590238579f227e",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"supreme\"",
        "payloadType": "str",
        "x": 120,
        "y": 1400,
        "wires": [
            [
                "1331ef883d726a27"
            ]
        ]
    },
    {
        "id": "55540464c6a4287d",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "gradeList",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":1,\"name\":\"Diesel\",\"price\":1.45},{\"id\":2,\"name\":\"regular\",\"price\":1.65},{\"id\":3,\"name\":\"premium\",\"price\":1.78},{\"id\":\"4\",\"name\":\"supreme\",\"price\":1.89}]",
        "payloadType": "json",
        "x": 120,
        "y": 1180,
        "wires": [
            [
                "7d6f4d4ef338aed7"
            ]
        ]
    },
    {
        "id": "7d6f4d4ef338aed7",
        "type": "mqtt out",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "grade-options",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "be30df5fe716aec9",
        "x": 320,
        "y": 1180,
        "wires": []
    },
    {
        "id": "a6d0613e2453e567",
        "type": "mqtt in",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "grade-options",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "be30df5fe716aec9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 680,
        "wires": [
            [
                "24876888d3d55db5"
            ]
        ]
    },
    {
        "id": "d8a02818540cbe02",
        "type": "switch",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "user-flow",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nozzle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "payment",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 370,
        "y": 920,
        "wires": [
            [
                "8efaad43bcbf4967"
            ],
            [
                "43094e0753167363"
            ],
            [
                "312bd80fd0ddde59"
            ]
        ]
    },
    {
        "id": "5c03f71acd1a83d0",
        "type": "mqtt in",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "language-panel",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "be30df5fe716aec9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 740,
        "wires": [
            [
                "24876888d3d55db5"
            ]
        ]
    },
    {
        "id": "7e12566930521cbd",
        "type": "mqtt out",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "language-selected",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "be30df5fe716aec9",
        "x": 750,
        "y": 1360,
        "wires": []
    },
    {
        "id": "176476841953e078",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"pt\"",
        "payloadType": "str",
        "x": 530,
        "y": 1360,
        "wires": [
            [
                "7e12566930521cbd"
            ]
        ]
    },
    {
        "id": "dd43b49ec71c3ee4",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"en\"",
        "payloadType": "str",
        "x": 530,
        "y": 1400,
        "wires": [
            [
                "7e12566930521cbd"
            ]
        ]
    },
    {
        "id": "ed9ae7a858dea9ef",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"es\"",
        "payloadType": "str",
        "x": 530,
        "y": 1440,
        "wires": [
            [
                "7e12566930521cbd"
            ]
        ]
    },
    {
        "id": "f44ca8db031bfda1",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"fr\"",
        "payloadType": "str",
        "x": 530,
        "y": 1480,
        "wires": [
            [
                "7e12566930521cbd"
            ]
        ]
    },
    {
        "id": "43094e0753167363",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "validate nozzle",
        "func": "const paymentMethod = flow.get(\"paymentMethod\");\nconst liftedNozzleGrade = msg.payload;\n\nswitch (paymentMethod) {\n    case 'at_pump':\n        if (flow.get(\"selectedGrade\") === null) {\n            msg.payload = { \"screen\": \"gradeScreen\", \"status\": \"selectOption\", \"payload\": { \"message\": \"select_grade_first\" } }\n            flow.set(\"currentScreen\", \"gradeScreen\");\n        } else if (flow.get(\"selectedGrade\") !== liftedNozzleGrade) {\n            const currentScreen = flow.get(\"currentScreen\");\n            msg.payload = { \"screen\": currentScreen, \"status\": \"liftNozzle\", \"payload\": { \"message\": \"lift_selected_grade\" } }\n        } else {\n            msg.payload = { \"command\": \"startFueling\" }\n        }\n        break;\n    case 'at_kiosk':\n        if (flow.get(\"selectedGrade\") === null) {\n            msg.payload = { \"screen\": \"gradeScreen\", \"status\": \"selectOption\", \"payload\": { \"message\": \"select_grade_first\" } }\n            flow.set(\"currentScreen\", \"gradeScreen\");\n        } else if (flow.get(\"selectedGrade\") !== liftedNozzleGrade) {\n            const currentScreen = flow.get(\"currentScreen\");\n            msg.payload = { \"screen\": currentScreen, \"status\": \"liftNozzle\", \"payload\": { \"message\": \"lift_selected_grade\" } }\n        } else if (paymentMethod === 'at_pump' || (flow.get(\"selectedGrade\") === liftedNozzleGrade)) {\n            msg.payload = { \"command\": \"startFueling\" }\n        } \n        // else if ((flow.get(\"selectedGrade\") === liftedNozzleGrade)) {\n        //     msg.payload = { \"command\": \"startFueling\" }\n        // }\n        break;\n    default:\n        break;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 900,
        "wires": [
            [
                "485e7e0b16aeb5da"
            ]
        ]
    },
    {
        "id": "83c0acb60952c451",
        "type": "link in",
        "z": "aa93b0a911d0f92d",
        "name": "link in 9",
        "links": [],
        "x": 2055,
        "y": 1060,
        "wires": [
            [
                "fb8472950beb15b0"
            ]
        ]
    },
    {
        "id": "485e7e0b16aeb5da",
        "type": "link out",
        "z": "aa93b0a911d0f92d",
        "name": "link out 34",
        "mode": "link",
        "links": [
            "6b691e51cf49a9ff"
        ],
        "x": 755,
        "y": 920,
        "wires": []
    },
    {
        "id": "acfe891a44feaf85",
        "type": "link out",
        "z": "aa93b0a911d0f92d",
        "name": "link out 35",
        "mode": "link",
        "links": [
            "6b691e51cf49a9ff"
        ],
        "x": 1245,
        "y": 1440,
        "wires": []
    },
    {
        "id": "1a7a2cd328c27c34",
        "type": "link out",
        "z": "aa93b0a911d0f92d",
        "name": "link out 36",
        "mode": "link",
        "links": [
            "6b691e51cf49a9ff"
        ],
        "x": 1245,
        "y": 860,
        "wires": []
    },
    {
        "id": "f015d7628f34f310",
        "type": "link out",
        "z": "aa93b0a911d0f92d",
        "name": "link out 37",
        "mode": "link",
        "links": [
            "6b691e51cf49a9ff"
        ],
        "x": 1245,
        "y": 1320,
        "wires": []
    },
    {
        "id": "002c049840cf7676",
        "type": "link out",
        "z": "aa93b0a911d0f92d",
        "name": "link out 38",
        "mode": "link",
        "links": [
            "6b691e51cf49a9ff"
        ],
        "x": 1245,
        "y": 180,
        "wires": []
    },
    {
        "id": "71ad6206439c65dd",
        "type": "link out",
        "z": "aa93b0a911d0f92d",
        "name": "link out 39",
        "mode": "link",
        "links": [
            "6b691e51cf49a9ff"
        ],
        "x": 1245,
        "y": 300,
        "wires": []
    },
    {
        "id": "229a454a9ef1b83a",
        "type": "link out",
        "z": "aa93b0a911d0f92d",
        "name": "link out 41",
        "mode": "link",
        "links": [
            "6b691e51cf49a9ff"
        ],
        "x": 1245,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e6ba57db7c701194",
        "type": "link out",
        "z": "aa93b0a911d0f92d",
        "name": "link out 43",
        "mode": "link",
        "links": [
            "6b691e51cf49a9ff"
        ],
        "x": 1575,
        "y": 540,
        "wires": []
    },
    {
        "id": "e54908dccb0cbabc",
        "type": "link out",
        "z": "aa93b0a911d0f92d",
        "name": "link out 44",
        "mode": "link",
        "links": [
            "6b691e51cf49a9ff"
        ],
        "x": 1245,
        "y": 480,
        "wires": []
    },
    {
        "id": "d796240084285f5b",
        "type": "link out",
        "z": "aa93b0a911d0f92d",
        "name": "link out 45",
        "mode": "link",
        "links": [
            "617f8a2e9b4b1513"
        ],
        "x": 1935,
        "y": 1060,
        "wires": []
    },
    {
        "id": "f642317d534ea9f3",
        "type": "link out",
        "z": "aa93b0a911d0f92d",
        "name": "link out 46",
        "mode": "link",
        "links": [
            "6b691e51cf49a9ff"
        ],
        "x": 2175,
        "y": 1200,
        "wires": []
    },
    {
        "id": "9082418ccde1c426",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "MQTT Topics Treatment",
        "info": "",
        "x": 140,
        "y": 560,
        "wires": []
    },
    {
        "id": "24876888d3d55db5",
        "type": "debug",
        "z": "aa93b0a911d0f92d",
        "name": "debug mqtt topipcs",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 680,
        "wires": []
    },
    {
        "id": "f52a042eea1465b4",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "lift nozzle",
        "info": "",
        "x": 100,
        "y": 1240,
        "wires": []
    },
    {
        "id": "9013c485d9aed681",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "change language",
        "info": "",
        "x": 540,
        "y": 1320,
        "wires": []
    },
    {
        "id": "f3499fcd8506a96f",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "grades list",
        "info": "",
        "x": 100,
        "y": 1140,
        "wires": []
    },
    {
        "id": "fc3849777b81f584",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "execute payment",
        "info": "",
        "x": 540,
        "y": 1140,
        "wires": []
    },
    {
        "id": "b1b3367530e7f029",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 530,
        "y": 1180,
        "wires": [
            [
                "5f4ffa3c6b5ee50b"
            ]
        ]
    },
    {
        "id": "36172f50cf721459",
        "type": "mqtt in",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "payment",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "be30df5fe716aec9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 1040,
        "wires": [
            [
                "d8a02818540cbe02",
                "24876888d3d55db5"
            ]
        ]
    },
    {
        "id": "5f4ffa3c6b5ee50b",
        "type": "mqtt out",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "payment",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "be30df5fe716aec9",
        "x": 720,
        "y": 1180,
        "wires": []
    },
    {
        "id": "527bb86149cfbed0",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 530,
        "y": 1220,
        "wires": [
            [
                "5f4ffa3c6b5ee50b"
            ]
        ]
    },
    {
        "id": "312bd80fd0ddde59",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "validate payment",
        "func": "const executedPayment = msg.payload;\nflow.set(\"executedPayment\", executedPayment);\n\nif (executedPayment === true) {\n    msg.payload = {\"command\": \"confirmPayment\"}\n} else {\n    msg.payload = { \"command\": \"declinePayment\" }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 940,
        "wires": [
            [
                "485e7e0b16aeb5da"
            ]
        ]
    },
    {
        "id": "05b142e1d32d92ce",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "confirmPayment",
        "func": "if (flow.get(\"canceledPayment\") === true) {\n    flow.set(\"executedPayment\", false);\n    msg = null;\n} else {\n    const paymentMethod = flow.get(\"paymentMethod\");\n\n    switch (paymentMethod) {\n        case 'at_pump':\n            if (flow.get(\"selectedGrade\")){\n                // msg.payload = {\"command\": \"startFueling\", \"payload\": {\"message\": \"payment_approved\"}}\n                msg.payload = { \"screen\": \"fuelingScreen\", \"status\": \"liftNozzle\", \"payload\": { \"message\": \"payment_approved\"}}\n                flow.set(\"currentScreen\", \"fuelingScreen\");\n            } else {\n                msg.payload = {\"screen\": \"gradeScreen\", \"status\": \"paymentApproved\",\"payload\": {\"message\": \"payment_approved\"}}\n                flow.set(\"currentScreen\", \"gradeScreen\");\n            }\n            break;\n        case 'at_kiosk':\n            if (flow.get(\"selectedGrade\")) {\n                // msg.payload = {\"command\": \"startFueling\", \"payload\": {\"message\": \"start_refueling\"}}\n                msg.payload = { \"screen\": \"fuelingScreen\", \"status\": \"liftNozzle\", \"payload\": { \"message\": \"lift_nozzle\" } }\n                flow.set(\"currentScreen\", \"fuelingScreen\");\n            } else {\n                msg.payload = {\"screen\": \"gradeScreen\", \"status\": \"selectOption\"}\n                flow.set(\"currentScreen\", \"gradeScreen\");\n            }\n            break;\n        default:\n            flow.set(\"paymentMethod\", \"at_pump\");\n            msg.payload = {\"screen\": \"gradeScreen\", \"status\": \"paymentApproved\",\"payload\": {\"message\": \"payment_approved\"}}\n            break;\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 660,
        "wires": [
            [
                "f4bdb8030cf80af4"
            ]
        ]
    },
    {
        "id": "fb98894eb65bc7ba",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "{\"command\": \"confirmPayment\"}",
        "info": "",
        "x": 1070,
        "y": 620,
        "wires": []
    },
    {
        "id": "f4bdb8030cf80af4",
        "type": "link out",
        "z": "aa93b0a911d0f92d",
        "name": "link out 47",
        "mode": "link",
        "links": [
            "6b691e51cf49a9ff"
        ],
        "x": 1245,
        "y": 660,
        "wires": []
    },
    {
        "id": "d852722419893c4f",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "{\"command\": \"declinePayment\"}",
        "info": "",
        "x": 1070,
        "y": 720,
        "wires": []
    },
    {
        "id": "9563d1563d675cff",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "declinePayment",
        "func": "// if (flow.get(\"canceledPayment\") === true) {\n//     flow.set(\"executedPayment\", false);\n//     msg = null;\n// } else {\n    // const paymentMethod = flow.get(\"paymentMethod\");\n\n    // switch (paymentMethod) {\n    //     case 'at_pump':\n    //         if (flow.get(\"selectedGrade\")){\n    //             // msg.payload = {\"command\": \"startFueling\", \"payload\": {\"message\": \"payment_approved\"}}\n    //             msg.payload = { \"command\": \"gradeScreen\", \"payload\": {\"message\": \"lift_nozzle\"}}\n    //         } else {\n    //             msg.payload = {\"screen\": \"gradeScreen\", \"payload\": {\"message\": \"payment_approved\"}}\n    //         }\n    //         break;\n    //     case 'at_kiosk':\n    //         if (flow.get(\"selectedGrade\")) {\n    //             // msg.payload = {\"command\": \"startFueling\", \"payload\": {\"message\": \"start_refueling\"}}\n    //             msg.payload = { \"command\": \"gradeScreen\", \"payload\": { \"message\": \"lift_nozzle\" } }\n    //         } else {\n    //             msg.payload = {\"screen\": \"gradeScreen\"}\n    //         }\n    //         break;\n    //     default:\n    //         break;\n    // }\n// }\n\nconst paymentMethod = flow.get(\"paymentMethod\");\nswitch (paymentMethod) {\n    case 'at_pump':\n        msg.payload = {\"screen\": \"cardScreen\", \"status\": \"insertCard\", \"payload\":{\"message\": \"payment_declined\"}}\n        flow.set(\"currentScreen\", \"cardScreen\");\n        // if (flow.get(\"selectedGrade\")){\n        //     // msg.payload = {\"command\": \"startFueling\", \"payload\": {\"message\": \"payment_approved\"}}\n        //     msg.payload = { \"command\": \"gradeScreen\", \"payload\": {\"message\": \"lift_nozzle\"}}\n        // } else {\n        //     msg.payload = {\"screen\": \"gradeScreen\", \"payload\": {\"message\": \"payment_approved\"}}\n        // }\n        break;\n    case 'at_kiosk':\n        msg.payload = { \"screen\": \"paymentScreen\", \"status\": \"selectOption\", \"payload\": { \"message\": \"authorization_declined\" } }\n        flow.set(\"currentScreen\", \"paymentScreen\");\n        // if (flow.get(\"selectedGrade\")) {\n        //     // msg.payload = {\"command\": \"startFueling\", \"payload\": {\"message\": \"start_refueling\"}}\n        //     msg.payload = { \"command\": \"gradeScreen\", \"payload\": { \"message\": \"lift_nozzle\" } }\n        // } else {\n        //     msg.payload = {\"screen\": \"gradeScreen\"}\n        // }\n        break;\n    default:\n        break;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 760,
        "wires": [
            [
                "19e01f9a13b4adb7"
            ]
        ]
    },
    {
        "id": "19e01f9a13b4adb7",
        "type": "link out",
        "z": "aa93b0a911d0f92d",
        "name": "link out 48",
        "mode": "link",
        "links": [
            "6b691e51cf49a9ff"
        ],
        "x": 1245,
        "y": 760,
        "wires": []
    },
    {
        "id": "91295131ec127c4e",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "toggle language",
        "info": "",
        "x": 120,
        "y": 1480,
        "wires": []
    },
    {
        "id": "1d04cb4aba94ea4b",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 1520,
        "wires": [
            [
                "2765ddf962714957"
            ]
        ]
    },
    {
        "id": "2765ddf962714957",
        "type": "mqtt out",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "language-panel",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "be30df5fe716aec9",
        "x": 320,
        "y": 1520,
        "wires": []
    },
    {
        "id": "a68ec750baf9fb58",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 110,
        "y": 1560,
        "wires": [
            [
                "2765ddf962714957"
            ]
        ]
    },
    {
        "id": "5f5d4d030f4f4263",
        "type": "mqtt in",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "language-selected",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "be30df5fe716aec9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 800,
        "wires": [
            [
                "24876888d3d55db5"
            ]
        ]
    },
    {
        "id": "8ff2efd6ec1ecc93",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "toggle accessibility",
        "info": "",
        "x": 130,
        "y": 1640,
        "wires": []
    },
    {
        "id": "7b7fbdf928aa4be2",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 1680,
        "wires": [
            [
                "624eb62f85c1693b"
            ]
        ]
    },
    {
        "id": "624eb62f85c1693b",
        "type": "mqtt out",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "accessibility",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "be30df5fe716aec9",
        "x": 310,
        "y": 1680,
        "wires": []
    },
    {
        "id": "ee04e35daf9b1b2b",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 110,
        "y": 1720,
        "wires": [
            [
                "624eb62f85c1693b"
            ]
        ]
    },
    {
        "id": "a062359106a25fee",
        "type": "mqtt in",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "accessibility",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "be30df5fe716aec9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 860,
        "wires": [
            [
                "24876888d3d55db5"
            ]
        ]
    },
    {
        "id": "101787eec867b8c5",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "7111c877fe591569"
            ]
        ]
    },
    {
        "id": "7111c877fe591569",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "initialize variables",
        "func": "flow.set(\"currentScreen\", null);\nflow.set(\"selectedGrade\", null);\nflow.set(\"paymentMethod\", null);\nflow.set(\"executedPayment\", false);\nflow.set(\"canceledPayment\", false);\nflow.set(\"calculatorData\", { \"payload\": { \"grade\": flow.get(\"selectedGrade\"), \"amount\": \"-------\", \"volume\": \"-------\" }});\n\n// debug to confirm\nnode.warn(\"Flow variables initialized.\");\n\nreturn null; // We don't need to pass anything forward\n// return msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "81cef403a9e6d941",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "Initialize variables",
        "info": "",
        "x": 130,
        "y": 260,
        "wires": []
    },
    {
        "id": "e2b71f476e83e072",
        "type": "mqtt out",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "user-flow",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "be30df5fe716aec9",
        "x": 2100,
        "y": 840,
        "wires": []
    },
    {
        "id": "f333a710049a09ed",
        "type": "mqtt in",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "user-flow",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "be30df5fe716aec9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 620,
        "wires": [
            [
                "24876888d3d55db5",
                "d8a02818540cbe02"
            ]
        ]
    },
    {
        "id": "6b691e51cf49a9ff",
        "type": "link in",
        "z": "aa93b0a911d0f92d",
        "name": "link in 1",
        "links": [
            "485e7e0b16aeb5da",
            "acfe891a44feaf85",
            "1a7a2cd328c27c34",
            "f015d7628f34f310",
            "71ad6206439c65dd",
            "229a454a9ef1b83a",
            "e6ba57db7c701194",
            "e54908dccb0cbabc",
            "f642317d534ea9f3",
            "f4bdb8030cf80af4",
            "19e01f9a13b4adb7",
            "002c049840cf7676",
            "b87281a9c20773ad"
        ],
        "x": 1935,
        "y": 840,
        "wires": [
            [
                "e2b71f476e83e072"
            ]
        ]
    },
    {
        "id": "b87281a9c20773ad",
        "type": "link out",
        "z": "aa93b0a911d0f92d",
        "name": "link out 40",
        "mode": "link",
        "links": [
            "6b691e51cf49a9ff"
        ],
        "x": 1245,
        "y": 960,
        "wires": []
    },
    {
        "id": "45f28745710e9bf3",
        "type": "comment",
        "z": "aa93b0a911d0f92d",
        "name": "toggle theme",
        "info": "",
        "x": 530,
        "y": 1640,
        "wires": []
    },
    {
        "id": "766e90142645cc53",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "dark",
        "payloadType": "str",
        "x": 530,
        "y": 1680,
        "wires": [
            [
                "d6ecf02e73f5a21a"
            ]
        ]
    },
    {
        "id": "d6ecf02e73f5a21a",
        "type": "mqtt out",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "theme",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "be30df5fe716aec9",
        "x": 710,
        "y": 1680,
        "wires": []
    },
    {
        "id": "928526ccc92e7d7a",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "light",
        "payloadType": "str",
        "x": 530,
        "y": 1720,
        "wires": [
            [
                "d6ecf02e73f5a21a"
            ]
        ]
    },
    {
        "id": "feedb045913c7e94",
        "type": "mqtt in",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "topic": "theme",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "be30df5fe716aec9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 920,
        "wires": [
            [
                "24876888d3d55db5"
            ]
        ]
    },
    {
        "id": "5272afd71d6d9cc4",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "Get Calculator Data",
        "func": "msg.payload = flow.get(\"calculatorData\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2210,
        "y": 980,
        "wires": [
            [
                "fb8472950beb15b0"
            ]
        ]
    },
    {
        "id": "dd83b2d08068aa43",
        "type": "inject",
        "z": "aa93b0a911d0f92d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.25",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2010,
        "y": 980,
        "wires": [
            [
                "5272afd71d6d9cc4"
            ]
        ]
    },
    {
        "id": "9efafb1893978c68",
        "type": "function",
        "z": "aa93b0a911d0f92d",
        "name": "Set Calculator Data",
        "func": "flow.set(\"calculatorData\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2210,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "617f8a2e9b4b1513",
        "type": "link in",
        "z": "aa93b0a911d0f92d",
        "name": "link in 2",
        "links": [
            "d796240084285f5b",
            "1edc7bb364a35c37"
        ],
        "x": 1935,
        "y": 920,
        "wires": [
            [
                "9efafb1893978c68"
            ]
        ]
    },
    {
        "id": "1edc7bb364a35c37",
        "type": "link out",
        "z": "aa93b0a911d0f92d",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "617f8a2e9b4b1513"
        ],
        "x": 1245,
        "y": 1000,
        "wires": []
    }
]